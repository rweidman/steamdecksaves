Initialize engine version: 2020.3.12f1 (b3b2c6512326)
[Subsystems] Discovering subsystems at path E:/SteamLibrary/steamapps/common/Disco Elysium/disco_Data/UnitySubsystems
GfxDevice: creating device client; threaded=1
Direct3D:
    Version:  Direct3D 11.0 [level 11.1]
    Renderer: AMD Custom GPU 0405 (RADV VANGOGH) (ID=0x163f)
    Vendor:   
    VRAM:     6101 MB
    Driver:   31.0.21902.5
D3D11 device created for Microsoft Media Foundation video decoding.
<RI> Initializing input.
<RI> Input initialized.
<RI> Initialized touch support.
UnloadTime: 0.694800 ms
Unloading 5 Unused Serialized files (Serialized files now loaded: 3)
[LocalizationManager_Languages] SavedLanguage:English
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
I2.Loc.LocalizationManager:SelectStartupLanguage()
I2.Loc.LocalizationManager:InitializeIfNeeded()
I2.Loc.LocalizationManager:get_CurrentLanguageCode()
LocalizationCustomSystem.LocalizationManager:OnEnable()

[LocalizationManager_Languages] SysLanguage:English
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
I2.Loc.LocalizationManager:SelectStartupLanguage()
I2.Loc.LocalizationManager:InitializeIfNeeded()
I2.Loc.LocalizationManager:get_CurrentLanguageCode()
LocalizationCustomSystem.LocalizationManager:OnEnable()


Unloading 2 unused Assets to reduce memory usage. Loaded Objects now: 7057.
Total: 4.622700 ms (FindLiveObjects: 0.380800 ms CreateObjectMapping: 0.187900 ms MarkObjects: 4.033700 ms  DeleteObjects: 0.019600 ms)

Loading profile 1 MEDIUM
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FontSizeProfiles.LayoutProfileChanger:LoadProfile(Int32)
FontSizeProfiles.LayoutProfileChanger:Start()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
PreInitialize:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

ReadGameSettings: True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<ReadGameSettingsCoR>d__7:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

StartupLanguage = English
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadGameData>d__18:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Amount of Save Games: 2
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CacheSaveGamesInit>d__53:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LoadGameData total time: 0.2147293
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadGameData>d__18:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Init: Move to next scene
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<WaitAndStartTheGame>d__13:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Unloading 5 Unused Serialized files (Serialized files now loaded: 3)
UnloadTime: 1.061000 ms
InControl (version 1.8.3 build 9361)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.InControlManager:OnEnable()

INITIALIZE ACHIEVEMENTS:  NONE
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Achievements:Initialize()
GogGalaxyManager:Awake()

Selected keyboard layout: QWERTY
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
KeyboardLayoutBindings:SetKeyboardLayout(KeyboardLayout)
CrossPlatformInputManager:CreateDefaultBindings(String, KeyboardLayout, Boolean)
CrossPlatformInputManager:Awake()

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()
InControl.InControlManager:OnSceneWasLoaded(Scene, LoadSceneMode)
UnityEngine.Events.UnityAction`2:Invoke(T0, T1)
UnityEngine.SceneManagement.SceneManager:Internal_SceneLoaded(Scene, LoadSceneMode)

Attached native device with handle 1:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()
InControl.InControlManager:OnSceneWasLoaded(Scene, LoadSceneMode)
UnityEngine.Events.UnityAction`2:Invoke(T0, T1)
UnityEngine.SceneManagement.SceneManager:Internal_SceneLoaded(Scene, LoadSceneMode)

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()
InControl.InControlManager:OnSceneWasLoaded(Scene, LoadSceneMode)
UnityEngine.Events.UnityAction`2:Invoke(T0, T1)
UnityEngine.SceneManagement.SceneManager:Internal_SceneLoaded(Scene, LoadSceneMode)

Attached native device with handle 2:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()
InControl.InControlManager:OnSceneWasLoaded(Scene, LoadSceneMode)
UnityEngine.Events.UnityAction`2:Invoke(T0, T1)
UnityEngine.SceneManagement.SceneManager:Internal_SceneLoaded(Scene, LoadSceneMode)

PlayIntroSequence - start
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
IntroSystem.<PlayIntroSequence>d__19:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
IntroSystem.IntroManager:Start()


Unloading 6 unused Assets to reduce memory usage. Loaded Objects now: 21955.
Total: 141.667800 ms (FindLiveObjects: 1.512500 ms CreateObjectMapping: 2.183900 ms MarkObjects: 137.886800 ms  DeleteObjects: 0.083100 ms)

[AreaManager] LoadAreas
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.AreaManager:LoadAreas()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
<StreamVideo>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

PlayIntroSequence - end
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
IntroSystem.<PlayIntroSequence>d__19:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

The 'Play on Awake' checkbox in the Audio Source for Sound Group 'authority-scene', Variation 'ambient' is checked. This is not used in Master Audio and can lead to buggy behavior. Make sure to uncheck it before hitting Play next time. To play ambient sounds, use an EventSounds component and activate the Start event to play a Sound Group of your choice.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
DarkTonic.MasterAudio.SoundGroupVariation:Awake()

[GameModeController] Hardcore Mode off
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
GameModeController:HardcoreModeOn(Boolean)
GameModeController:Awake()

Build Number:94f782a7
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
BuildIdDisplay:Awake()

NotSupportedException: To marshal a managed method, please add an attribute named 'MonoPInvokeCallback' to the method definition. The method we're attempting to marshal is: SteamManager::SteamAPIDebugTextHook
  at Steamworks.SteamClient.SetWarningMessageHook (Steamworks.SteamAPIWarningMessageHook_t pFunction) [0x00000] in <00000000000000000000000000000000>:0 
  at SteamManager.OnEnable () [0x00000] in <00000000000000000000000000000000>:0 

[AmplifyTexture] Initializing collections took 0.001755714 sec
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
AmplifyTextureManager:InitializeCollections()
AmplifyTextureManager:Awake()

Unloading 6 Unused Serialized files (Serialized files now loaded: 3)
SAME KEYBOARD LAYOUT SELECTED. BAIL OUT
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
CrossPlatformInputManager:CreateDefaultBindings(String, KeyboardLayout, Boolean)
KeyboardMappingOption:OnChange()

[SunBehaviour] Toggled shadows ON
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
SunBehaviour:OnRenderingQualityChanged(Int32)
PixelCrushers.UnloadSceneDelegate:Invoke(Int32)
ShaderGraphicsOption:OnChange()

[DisplayModeOption] onChange FullScreenWindow
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
DisplayModeOption:OnChange()

[AreaManager] LoadAreasCoR finished
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.<LoadAreasCoR>d__26:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#00FFFF>DialogueBundle is not yet ready - we need to wait until DialogBundle is ready.
 Extending Loading</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.ApplicationManager:OnStartCompleted()
IntroSystem.IntroManager:OnLoadCompleted()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
Sunshine.<LoadAreasCoR>d__26:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

INITIALIZE ACHIEVEMENTS:  STEAM
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Achievements:Initialize()
SteamAchievements:Start()

Loading profile 1 MEDIUM
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FontSizeProfiles.LayoutProfileChanger:LoadProfile(Int32)
LayoutProfileConfiguration:Start()

[UnregisterEscapeKeyListener]
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Credits:HideCredits()

[LocalizationSettingsOption] Main language set to: English
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
LocalizationCustomSystem.LocalizationSettingsOption:Start()

[LocalizationSettingsOption] Switchable language set to: English
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)

[ResolutionSwitcher] Apply
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ResolutionSwitcher:Apply(String)
ResolutionSwitcher:Activate()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent`1:Invoke(T0)
TMPro.TMP_Dropdown:SetValue(Int32, Boolean)
ResolutionSwitcher:Start()

[ResolutionSwitcher] Resolution change from 1280 800 FullScreenWindow to 1280 800 FullScreenWindow
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ResolutionSwitcher:SetResolution(Int32, Int32, FullScreenMode)
ResolutionSwitcher:Apply(String)
ResolutionSwitcher:Activate()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent`1:Invoke(T0)
TMPro.TMP_Dropdown:SetValue(Int32, Boolean)
ResolutionSwitcher:Start()


Unloading 74 unused Assets to reduce memory usage. Loaded Objects now: 66246.
Total: 316.610500 ms (FindLiveObjects: 5.605500 ms CreateObjectMapping: 3.291400 ms MarkObjects: 307.205600 ms  DeleteObjects: 0.506900 ms)

<color=#00FFFF>Loading Build Bundle</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
DialogueBundleLoader:LoadBuildBundle()
<Start>d__10:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#00FFFF>Successfully loaded Build Bundle</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
DialogueBundleLoader:LoadDone(AsyncOperationHandle`1)
System.Action`1:Invoke(T)
DelegateList`1:Invoke(T)
UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1:InvokeCompletionEvent()
UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationBase`1:Complete(TObject, Boolean, Exception, Boolean)
UnityEngine.ResourceManagement.AsyncOperations.ProviderOperation`1:ProviderCompleted(T, Boolean, Exception)
UnityEngine.ResourceManagement.ResourceProviders.InternalOp:CompleteOperation()
System.Action`1:Invoke(T)
UnityEngine.AsyncOperation:InvokeCompletionEvent()

Unloading 8 Unused Serialized files (Serialized files now loaded: 4)
UnloadTime: 1.463600 ms
LOADING Scenes/Church-int took 685.9226 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)


Unloading 14368 unused Assets to reduce memory usage. Loaded Objects now: 56590.
Total: 706.516900 ms (FindLiveObjects: 6.142300 ms CreateObjectMapping: 3.379900 ms MarkObjects: 689.891000 ms  DeleteObjects: 7.102800 ms)

LOADING Scenes/Whirling-int-f1 took 1292.145 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Whirling-int-f2 took 215.0211 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Martinaise-ext took 2746.983 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Doomed-commerce-int-f2 took 102.869 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Doomed-commerce-int-f1 took 85.72388 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Doomed-commerce-int-s1 took 113.5616 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Kiosque-int took 99.61128 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Capeside-apartments-int took 86.56693 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Whirling-int-f3 took 79.95033 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Whirling-int-f3-antechamber took 71.01822 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Capeside-coalchamber-int took 60.85205 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Secretary-int took 66.64658 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Pawnshop-int took 84.22279 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Cunos-shack-int took 65.87029 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Capeside-smoker-int took 83.47321 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Sea-fortress-int took 82.29256 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Tent-int took 70.04929 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Second-home-int took 65.5632 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/FV-house-int took 86.38573 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Instigators-lair-int took 180.6564 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Union-container-int took 63.39264 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Union-boss-int took 116.5257 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Capeside-wcw-int took 66.01143 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Crypto-garys-apt-int took 66.06674 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Dream-2 took 83.38737 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/FV-shack-int took 66.4978 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Feld-int took 66.79916 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Dream-3-ext took 102.6764 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Dream-3-int took 66.33377 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/Commustudent-int took 726.8391 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LOADING Scenes/CollageMode took 3323.988 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

CleanCacheAndUpdateSources took 16.72745 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

GCCollect took 193.4338 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

TOTAL SCENE LOADING took 0m 11s
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadAllScenes>d__8:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Unloading 36 Unused Serialized files (Serialized files now loaded: 4)
Scene Loading Scenes/Lobby took 393.4479 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)


Unloading 34 unused Assets to reduce memory usage. Loaded Objects now: 321289.
Total: 763.222300 ms (FindLiveObjects: 19.850000 ms CreateObjectMapping: 19.789200 ms MarkObjects: 723.102700 ms  DeleteObjects: 0.479600 ms)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 135 shaders 14961 combinations 3.912s
Unloading 0 Unused Serialized files (Serialized files now loaded: 4)

Unloading 7 unused Assets to reduce memory usage. Loaded Objects now: 321230.
Total: 768.708700 ms (FindLiveObjects: 26.212400 ms CreateObjectMapping: 21.950200 ms MarkObjects: 720.034200 ms  DeleteObjects: 0.510700 ms)

OnSubmit Thinker
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ArchetypeSelectButton:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Scene Loading Scenes/Whirling-int-f2 took 148.5901 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
WhirlingNewGameManager:NewGameMode(Boolean, Boolean)
<NewGameCoR>d__37:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[AmplifyTexture] Resized cache for screen resolution 1280x800 => 4096x2048 (450 pages, 43 MB, Compressed, Adaptive)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
AmplifyTextureCamera:InternalInitialize(EditorRuntimeProperties)
AmplifyTextureManager:InternalUpdate()

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 137 shaders 14967 combinations 0.086s
Reset
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ModusMullen:Start()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 2:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 3:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Closing Doors Whirling Door Tequila
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Door:CloseDoorsOnLevelTransition()
FortressOccident.Door:OnSceneDeactivated()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
SceneTransition:TriggerSceneUnloaded(Scene)
FortressOccident.SceneTransitionManager:SetActive(Scene, Boolean)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Scene Loading Scenes/Martinaise-ext took 1239.136 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Setting up 2 worker threads for Enlighten.
  Thread -> id: 2e0 -> priority: 1 
  Thread -> id: 2e4 -> priority: 1 
WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.459s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Whirling-int-f2 took 77.27051 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.093s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Closing Doors Whirling Door Tequila
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Door:CloseDoorsOnLevelTransition()
FortressOccident.Door:OnSceneDeactivated()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
SceneTransition:TriggerSceneUnloaded(Scene)
FortressOccident.SceneTransitionManager:SetActive(Scene, Boolean)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Scene Loading Scenes/Whirling-int-f1 took 189.4531 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.094s
OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

[PersistentDataManager.GetRawData] Memory stream took 7785 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 866 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 219.3604 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 3:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 4:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 4:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 5:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 5:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 6:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 6:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 7:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

[PersistentDataManager.GetRawData] Memory stream took 7786 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 867 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 218.2617 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 7:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 8:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 8:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

[PersistentDataManager.GetRawData] Memory stream took 7786 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 867 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 232.4219 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[PersistentDataManager.GetRawData] Memory stream took 7786 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 867 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 225.5859 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 9:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 415.0391 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.082s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[PersistentDataManager.GetRawData] Memory stream took 7787 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 870 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 250 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[PersistentDataManager.GetRawData] Memory stream took 7787 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 869 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 232.4219 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-30.7, 4.2, -108.5)] can not reach newPosition: (-30.0, 7.8, -105.3).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.Party:ExecuteCommand(MovementCommand)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-30.7, 4.2, -108.4)] can not reach newPosition: (-30.0, 7.8, -105.3).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.Party:ExecuteCommand(MovementCommand)
Sunshine.GameController:Update()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Whirling-int-f1 took 80.07813 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.090s
Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 9:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 10:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 10:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 11:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 427.7344 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.080s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 11:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 12:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 12:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 13:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 13:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 14:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 14:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

Joystick disconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 15:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::2
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Detached native device with handle 1:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick connected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 16:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

[PersistentDataManager.GetRawData] Memory stream took 7787 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 871 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 253.9063 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Trying to update non-visible task:
Find your other shoe
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Sing karaoke
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Report your badge missing
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Interview cafeteria manager
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Inspect victim's body
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Get a reality lowdown
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Who made the call reporting the crime?
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Ask gardener about gardening in March
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Open trash container
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Pay for damages
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Find out who is in the Union box
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Who put the clothes in the trash?
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Find your paperwork
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Read your ledger and name the case
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Sort current list
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.InventoryManager:Update()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueManager:StartConversation(String)
Sunshine.InventoryTooltip:<PrimeConversation>b__62_0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
Sunshine.InventoryTooltip:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 16:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 17:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 17:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 18:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 18:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 19:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 19:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 20:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Scene Loading Scenes/Martinaise-ext took 484.375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
Sunshine.<PerformActions>d__5:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.102s
OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueManager:StartConversation(String)
RedButtonSwitch:LedgerButtonWasClicked()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Expensive FindSpecifier invocation for object: WakeUpKimLoc in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

Expensive FindSpecifier invocation for object: WakeUpWalkLoc in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

Sort current list
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.InventoryManager:Update()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueManager:StartConversation(String)
Sunshine.InventoryTooltip:<PrimeConversation>b__62_0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
Sunshine.InventoryTooltip:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Sort current list
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.InventoryManager:Update()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueManager:StartConversation(String)
Sunshine.InventoryTooltip:<PrimeConversation>b__62_0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
Sunshine.InventoryTooltip:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Sort current list
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.InventoryManager:Update()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueManager:StartConversation(String)
Sunshine.InventoryTooltip:<PrimeConversation>b__62_0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
Sunshine.InventoryTooltip:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Trying to update non-visible task:
Read the watermarks
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Expensive FindSpecifier invocation for object: Kineema in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandPlayAnimation:Start()

Expensive FindSpecifier invocation for object: Kineema in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandPlayAnimation:Start()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Expensive FindSpecifier invocation for object: TequilaHeadlightsLoc in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

Expensive FindSpecifier invocation for object: KimHeadlightsLoc in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

Expensive FindSpecifier invocation for object: Kineema in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandPlayAnimation:Start()

<color=#0099bc><b>DOTWEEN ► </b></color>Tween startup failed (NULL target/property - UnityEngine.Vector3 get_localScale()): the tween will now be killed ► Object reference not set to an instance of an object.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
DG.Tweening.Core.Debugger:LogWarning(Object, Tween)
DG.Tweening.Tweener:DoStartup(TweenerCore`3)
DG.Tweening.Core.TweenManager:Update(UpdateType, Single, Single)
DG.Tweening.Core.DOTweenComponent:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Expensive FindSpecifier invocation for object: Kineema in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandPlayAnimation:Start()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Curl error 6: Could not resolve host: cdp.cloud.unity3d.com

Joystick reconnected ("Controller (XBOX 360 For Windows)").

[PersistentDataManager.GetRawData] Memory stream took 7790 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 875 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 351.5625 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Trying to update non-visible task:
Track down your badge
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Track down your gun
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Trying to update non-visible task:
Talk to Garte for Sylvie
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.<>c__DisplayClass61_0:<PrimeThought>b__0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

<color=#FF0000>UPDATE SynapseController.instance.Switch FOR iOS</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.ThoughtSlot:RemoveThought()
Sunshine.ThoughtSlotsTree:RemoveThoughtProject(ThoughtCabinetProject)
Sunshine.ThoughtManager:CancelProcessingThought(ThoughtCabinetProject)
Sunshine.<>c__DisplayClass61_0:<PrimeThought>b__3()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.<>c__DisplayClass61_0:<PrimeThought>b__0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Expensive FindSpecifier invocation for object: Eternite_door in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandPlayAnimation:Start()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:CheckIfCanCreatePathToHavePath(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:CheckIfCanCreatePathToHavePath(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:CheckIfCanCreatePathToHavePath(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:CheckIfCanCreatePathToHavePath(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Whirling-int-f1 took 85.9375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.085s
Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.ThoughtSlot:OnClickedHandler()
Sunshine.ThoughtSlot:OnSelect(BaseEventData)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:SelectNonGroupNavigation(Selectable)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.ThoughtSlot:OnClickedHandler()
NavigationManager:HandleNavigationInput()

<color=#FF0000>UPDATE SynapseController.instance.Switch FOR iOS</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.ThoughtSlot:RemoveThought()
Sunshine.ThoughtSlotsTree:RemoveThoughtProject(ThoughtCabinetProject)
Sunshine.ThoughtManager:CancelProcessingThought(ThoughtCabinetProject)
Sunshine.<>c__DisplayClass61_0:<PrimeThought>b__3()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.<>c__DisplayClass61_0:<PrimeThought>b__0()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()

Orb Template.GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
Sunshine.MovementCommand:Process(Component, Sector)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Failed to create agent because it is not close enough to the NavMesh
Sunshine.<Validate>d__41:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[ line 1110408]

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-1.5, 0.0, 6.6)] can not reach newPosition: (-1.0, 0.0, 8.4).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-1.5, 0.0, 6.6)] can not reach newPosition: (-1.0, 0.0, 8.4).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-1.5, 0.0, 6.6)] can not reach newPosition: (-1.0, 0.0, 8.4).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-1.5, 0.0, 6.6)] can not reach newPosition: (-1.0, 0.0, 8.4).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Orb Template.GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
Sunshine.MovementCommand:Process(Component, Sector)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Failed to create agent because it is not close enough to the NavMesh
Sunshine.<Validate>d__41:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[ line 1110408]

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
Sunshine.GameController:TryMoveToTarget()
CharacterAnalogueControl:FixedUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<RI.Hid> Failed to start reading input report:
Access denied.

<RI.Hid> Failed to start reading input report:
Access denied.

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 20:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 21:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick disconnected ("Controller (XBOX 360 For Windows)").

Detached native device with handle 21:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Joystick reconnected ("Controller (XBOX 360 For Windows)").

AttachDevice XInput Controller
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
InControl.InputManager:AttachDevice(InputDevice)
InControl.NativeInputDeviceManager:DetectDevice(UInt32, InputDeviceInfo)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Attached native device with handle 22:
Name: XInput Controller
Driver Type: XInput
TransportType: Unknown
Location ID: XInput::1
Serial Number: 
Vendor ID: 0xffff
Product ID: 0x0
Version Number: 0x1
Buttons: 14
Analogs: 6
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

[PersistentDataManager.GetRawData] Memory stream took 7790 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 876 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 335.9375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
TutorialMessage:SetObsolete(Boolean, Boolean)
TutorialTracker:SetTutorialObsolete(TUTORIAL_TYPE)
OrbitStateSelector:CheckTab()
SelectionCircleController:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Trying to update non-visible task:
Find booze and drink it
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
NavigationManager:Select(Selectable)
NavigationManager:NavigateOrSelectPrevious(Selectable, Direction)
NavigationManager:HandleNavigationInput()

[DisplayModeOption] onChange FullScreenWindow
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
DisplayModeOption:OnChange()
Sunshine.Views.OptionsView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

[SunBehaviour] Toggled shadows ON
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
SunBehaviour:OnRenderingQualityChanged(Int32)
PixelCrushers.UnloadSceneDelegate:Invoke(Int32)
ShaderGraphicsOption:OnChange()
Sunshine.Views.OptionsView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

SAME KEYBOARD LAYOUT SELECTED. BAIL OUT
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
CrossPlatformInputManager:CreateDefaultBindings(String, KeyboardLayout, Boolean)
KeyboardMappingOption:OnChange()
Sunshine.Views.OptionsView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
Sunshine.Views.OptionsView:OnExitView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
Sunshine.Views.View:CloseOnUICancel()
Sunshine.Views.OptionsView:HideExpandedDropdownOrAction(Action)
System.Action:Invoke()
InputPrioritySystem:Update()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Whirling-int-f2 took 54.6875 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.092s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
Sunshine.GameController:TryMoveToTarget()
CharacterAnalogueControl:FixedUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Closing Doors Whirling Door Tequila
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Door:CloseDoorsOnLevelTransition()
FortressOccident.Door:OnSceneDeactivated()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
SceneTransition:TriggerSceneUnloaded(Scene)
FortressOccident.SceneTransitionManager:SetActive(Scene, Boolean)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Scene Loading Scenes/Martinaise-ext took 441.4063 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.081s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Whirling-int-f2 took 89.84375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.094s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Whirling-int-f1 took 54.6875 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.098s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Hardie window clicked (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 441.4063 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.077s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Trying to update non-visible task:
Explore the Whirling’s secret passages
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogWarning(Object, Object)
Sunshine.Journal.Controller.JournalTasksController:UpdateJournalTaskUI(JournalTask, SunshineClockTime)
Sunshine.Journal.Controller.JournalTasksController:DrawTasks()
Sunshine.Journal.Controller.JournalController:DrawTasks()
Sunshine.Journal.Controller.JournalController:OnSwitchedToView()
Sunshine.Views.JournalView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
UnityEngine.EventSystems.EventSystem:SetSelectedGameObject(GameObject, BaseEventData)
UnityEngine.UI.Selectable:Select()
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
Sunshine.ThoughtManager:ResetView(Boolean)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

You wanted to get open slot, but there are no more open slots to return!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
Sunshine.ThoughtSlotsTree:ReturnFirstFreeSlot()
Sunshine.ThoughtCabinetTooltip:PrimeThought(String)
Sunshine.ThoughtCabinetTooltip:UseSource(String)
Sunshine.ThoughtCabinetTooltip:set_Source(String)
Sunshine.ThoughtCabinetTooltip:Show(String)
System.Action`1:Invoke(T)
Sunshine.Views.ThoughtCabinetView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
CharacterAnalogueControl:UITopTabPressedSelectMenuInDirection(Int32, Int32)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

collapsing doorway (Canvas).GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:CheckIfCanCreatePathToHavePath(Location)
CommonPadInteractable:PathToInteractableExist()
InteractableSelectionManager:SelectClosestToPositionInDirection(Vector3, Vector2)
InteractableSelectionManager:GetNextInteractableInDirection(Vector3, Vector2)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Cunos-shack-int took 74.21875 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.091s
OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
Sunshine.GameController:TryMoveToTarget()
CharacterAnalogueControl:FixedUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
Sunshine.GameController:TryMoveToTarget()
CharacterAnalogueControl:FixedUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 449.2188 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.086s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

box_3 rooftop.GetInteractionLocation(): couldn't find a valid path!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
Sunshine.MovementCommand:Process(Component, Sector)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FF0000>Validate Movement failed, movement target is null!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FF0000>Validate Movement failed, movement target is null!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FF0000>Validate Movement failed, movement target is null!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FF0000>Validate Movement failed, movement target is null!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

command.to is null !!
UnityEngine.Logger:Log(LogType, Object, Object)
UnityEngine.Debug:LogError(Object, Object)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FF0000>Validate Movement failed, movement target is null!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Cunos-shack-int took 70.3125 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.119s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 441.4063 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.078s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Expensive FindSpecifier invocation for object: KimCraneMarker in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

Expensive FindSpecifier invocation for object: KimCraneReturnMarker in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
JournalWhiteCheckUI:UpdateCheck()
Sunshine.Journal.Controller.JournalController:OnWhiteCheckCached(WhiteCheck)
FailedWhiteChecks:AddToCaches(WhiteCheck)
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
JournalWhiteCheckUI:UpdateCheck()
Sunshine.Journal.Controller.JournalController:UpdateShownWhiteChecks()
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Expensive FindSpecifier invocation for object: CloakJumpMarker in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

To end a view instead of calling ToggleView(ViewType.CLEAR) call ToggleView(Current)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogError(Object)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
FortressOccident.SceneTransitionManager:SetLobby()
FortressOccident.ApplicationManager:LoadLobby(Boolean)
Sunshine.EndgameManager:GenericEndgame()
Sunshine.EndgameManager:_NewspaperEndgame(String, String)
System.Action:Invoke()
Sunshine.ConversationLogger:OnConversationEnd(Transform)
PixelCrushers.DialogueSystem.ConversationModel:InformParticipants(String, Boolean)
PixelCrushers.DialogueSystem.ConversationController:Close()
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
PixelCrushers.DialogueSystem.AbstractDialogueUI:OnContinueConversation()
Sunshine.ConversationLogger:OnContinue()
SunshineContinueButton:WasClicked()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
Sunshine.ConversationLogger:LateUpdate()

Could not find clip 'red-rock-rattle' in current Playlist in 'PLC_Main_Music'.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
DarkTonic.MasterAudio.PlaylistController:TriggerPlaylistClip(String)
Sunshine.<>c:<OnEnable>b__15_0()
System.Action:Invoke()
System.Action`1:Invoke(T)
Voidforge.Timer:set_time(Single)
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()

Start thumbnail coroutine
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Views.SaveLoadController:PrepareView(SAVE_LOAD_MODE)
Sunshine.Views.LoadView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

RemoveObsession(null)
UnityEngine.Logger:LogFormat(LogType, String, Object[])
UnityEngine.Debug:LogFormat(String, Object[])
Sunshine.Metric.InventoryViewData:RemoveObsession(String)
Sunshine.Metric.InventoryViewData:Unequip(EquipmentSlotType, Boolean)
Sunshine.Metric.InventoryViewData:ReplaceEquipped(ItemType, String, String)
Sunshine.Inventory:ChangeEquippedItem(InventoryItem, InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

RemoveObsession(null)
UnityEngine.Logger:LogFormat(LogType, String, Object[])
UnityEngine.Debug:LogFormat(String, Object[])
Sunshine.Metric.InventoryViewData:RemoveObsession(String)
Sunshine.Metric.InventoryViewData:Unequip(EquipmentSlotType, Boolean)
Sunshine.Metric.InventoryViewData:ReplaceEquipped(ItemType, String, String)
Sunshine.Inventory:ChangeEquippedItem(InventoryItem, InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

shoes_snakeskin is missing its mesh
UnityEngine.Logger:LogFormat(LogType, String, Object[])
UnityEngine.Debug:LogWarningFormat(String, Object[])
Sunshine.SkinnedCharacterItem:BuildBlendshapesList()
TequilaClothing:Unequip(String)
Sunshine.Metric.InventoryViewData:Unequip(EquipmentSlotType, Boolean)
Sunshine.Metric.InventoryViewData:ReplaceEquipped(ItemType, String, String)
Sunshine.Inventory:ChangeEquippedItem(InventoryItem, InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Scene Loading Scenes/Whirling-int-f1 took 39.0625 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LoadCoR GCCollect took 363.2813 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 138 shaders 14971 combinations 0.061s
Failed to create agent because it is not close enough to the NavMesh
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[ line 1108184]

Failed to create agent because it is not close enough to the NavMesh
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[ line 1108184]

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
CharacterSheetPersister:DeserializeItemsAndThoughts(CharacterSheetState)
CharacterSheetPersister:Deserialize(CharacterSheetState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
CharacterSheetPersister:DeserializeItemsAndThoughts(CharacterSheetState)
CharacterSheetPersister:Deserialize(CharacterSheetState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
CharacterSheetPersister:DeserializeItemsAndThoughts(CharacterSheetState)
CharacterSheetPersister:Deserialize(CharacterSheetState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[GameModeController] Hardcore Mode off
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
GameModeController:HardcoreModeOn(Boolean)
GameModePersister:Deserialize(GameModeState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Reset
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ModusMullen:Reset()
PartyPersister:PlacePartyAfterLoading()
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 593.75 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.377s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[PersistentDataManager.GetRawData] Memory stream took 8246 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 985 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 484.375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Cunos-shack-int took 101.5625 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.094s
OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 582.0313 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.084s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

[PersistentDataManager.GetRawData] Memory stream took 8246 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 985 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
JournalWhiteCheckUI:UpdateCheck()
Sunshine.Journal.Controller.JournalController:OnWhiteCheckCached(WhiteCheck)
FailedWhiteChecks:AddToCaches(WhiteCheck)
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
JournalWhiteCheckUI:UpdateCheck()
Sunshine.Journal.Controller.JournalController:UpdateShownWhiteChecks()
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Expensive FindSpecifier invocation for object: CloakJumpMarker in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
OrbUiElement:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

To end a view instead of calling ToggleView(ViewType.CLEAR) call ToggleView(Current)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogError(Object)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
FortressOccident.SceneTransitionManager:SetLobby()
FortressOccident.ApplicationManager:LoadLobby(Boolean)
Sunshine.EndgameManager:GenericEndgame()
Sunshine.EndgameManager:_NewspaperEndgame(String, String)
System.Action:Invoke()
Sunshine.ConversationLogger:OnConversationEnd(Transform)
PixelCrushers.DialogueSystem.ConversationModel:InformParticipants(String, Boolean)
PixelCrushers.DialogueSystem.ConversationController:Close()
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
PixelCrushers.DialogueSystem.AbstractDialogueUI:OnContinueConversation()
Sunshine.ConversationLogger:OnContinue()
SunshineContinueButton:WasClicked()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
UnityEngine.EventSystems.ExecuteEvents:Execute(GameObject, BaseEventData, EventFunction`1)
Sunshine.ConversationLogger:LateUpdate()

Could not find clip 'red-rock-rattle' in current Playlist in 'PLC_Main_Music'.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
DarkTonic.MasterAudio.PlaylistController:TriggerPlaylistClip(String)
Sunshine.<>c:<OnEnable>b__15_0()
System.Action:Invoke()
System.Action`1:Invoke(T)
Voidforge.Timer:set_time(Single)
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()

Thumbnail coroutine already running. Restarting.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
SunshinePersistenceThumbnail:StartProcess(SaveLoadController)
Sunshine.Views.SaveLoadController:PrepareView(SAVE_LOAD_MODE)
Sunshine.Views.LoadView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

Stop thumbnail coroutine
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
SunshinePersistenceThumbnail:StartProcess(SaveLoadController)
Sunshine.Views.SaveLoadController:PrepareView(SAVE_LOAD_MODE)
Sunshine.Views.LoadView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

Start thumbnail coroutine
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Views.SaveLoadController:PrepareView(SAVE_LOAD_MODE)
Sunshine.Views.LoadView:SwitchToView(ViewType)
Sunshine.Views.ViewController:ToggleView(ViewType, Boolean)
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
NavigationManager:HandleNavigationInput()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

RemoveObsession(null)
UnityEngine.Logger:LogFormat(LogType, String, Object[])
UnityEngine.Debug:LogFormat(String, Object[])
Sunshine.Metric.InventoryViewData:RemoveObsession(String)
Sunshine.Metric.InventoryViewData:Unequip(EquipmentSlotType, Boolean)
Sunshine.Metric.InventoryViewData:ReplaceEquipped(ItemType, String, String)
Sunshine.Inventory:ChangeEquippedItem(InventoryItem, InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

RemoveObsession(null)
UnityEngine.Logger:LogFormat(LogType, String, Object[])
UnityEngine.Debug:LogFormat(String, Object[])
Sunshine.Metric.InventoryViewData:RemoveObsession(String)
Sunshine.Metric.InventoryViewData:Unequip(EquipmentSlotType, Boolean)
Sunshine.Metric.InventoryViewData:ReplaceEquipped(ItemType, String, String)
Sunshine.Inventory:ChangeEquippedItem(InventoryItem, InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

shoes_snakeskin is missing its mesh
UnityEngine.Logger:LogFormat(LogType, String, Object[])
UnityEngine.Debug:LogWarningFormat(String, Object[])
Sunshine.SkinnedCharacterItem:BuildBlendshapesList()
TequilaClothing:Unequip(String)
Sunshine.Metric.InventoryViewData:Unequip(EquipmentSlotType, Boolean)
Sunshine.Metric.InventoryViewData:ReplaceEquipped(ItemType, String, String)
Sunshine.Inventory:ChangeEquippedItem(InventoryItem, InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:UnregisterItem(InventoryItem)
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
Sunshine.Metric.CharacterItems:LoseItem(InventoryItem)
Sunshine.Inventory:DeleteItem(String)
Sunshine.Inventory:TakeOffAndLooseTequilaClothes()
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Scene Loading Scenes/Martinaise-ext took 378.9063 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
SunshinePersistenceLoadDataManager:LoadAreaAndQueueCallbacksFromMemory(String)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

LoadCoR GCCollect took 375 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<LoadCoR>d__59:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 138 shaders 14971 combinations 0.059s
Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
<>c:<RegisterListeners>b__21_0()
System.Action:Invoke()
CharacterSheetPersister:DeserializeItemsAndThoughts(CharacterSheetState)
CharacterSheetPersister:Deserialize(CharacterSheetState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
CharacterSheetPersister:DeserializeItemsAndThoughts(CharacterSheetState)
CharacterSheetPersister:Deserialize(CharacterSheetState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
FailedWhiteChecks:IsFailedWhiteCheckPossible(WhiteCheck)
FailedWhiteChecks:CheckChecksForReDoability(List`1)
FailedWhiteChecks:OnModifiableConditionChanged(String)
System.Action:Invoke()
CharacterSheetPersister:DeserializeItemsAndThoughts(CharacterSheetState)
CharacterSheetPersister:Deserialize(CharacterSheetState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[GameModeController] Hardcore Mode off
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
GameModeController:HardcoreModeOn(Boolean)
GameModePersister:Deserialize(GameModeState)
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Reset
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ModusMullen:Reset()
PartyPersister:PlacePartyAfterLoading()
SunshinePersistenceLoadDataManager:LoadDataAfterLoadingArea()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:InitialState(Response, Transform, Int32, UIAutonumberSettings)
PixelCrushers.DialogueSystem.Wrappers.TextMeshProResponseMenuControls:SetResponseButtons(Response[], Transform)
PixelCrushers.DialogueSystem.AbstractUIResponseMenuControls:ShowResponses(Subtitle, Response[], Transform)
PixelCrushers.DialogueSystem.AbstractDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.TextMeshProSupport.TextMeshProDialogueUI:ShowResponses(Subtitle, Response[], Single)
PixelCrushers.DialogueSystem.ConversationView:StartResponses(Subtitle, Response[])
System.ComponentModel.PropertyChangedEventHandler:Invoke(Object, PropertyChangedEventArgs)
PixelCrushers.DialogueSystem.ConversationView:FinishSubtitle()
System.Action:Invoke()
PixelCrushers.DialogueSystem.Sequencer:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:GetCheck(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:AddCheckToSeen(DialogueEntry)
SunshineResponseButton:GetData(DialogueEntry)
SunshineResponseButton:Update()

Invalid item: pants_itchy_angry_pants
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.Metric.InventoryViewData:IsEquipped(String)
Sunshine.Dialogue.InventoryLuaFunctions:CheckEquipped(String)
System.Reflection.MonoMethod:Invoke(Object, BindingFlags, Binder, Object[], CultureInfo)
System.Reflection.MethodBase:Invoke(Object, Object[])
Language.Lua.LuaMethodFunction:InvokeMethod(LuaValue[])
System.Diagnostics.Tracing.Transformer`1:Invoke(ValueType)
Language.Lua.PrimaryExpr:Evaluate(LuaTable)
Language.Lua.LuaInterpreterExtensions:EvaluateAll(List`1, LuaTable)
Language.Lua.Chunk:Execute(Boolean&)
Language.Lua.Chunk:Execute()
Language.Lua.LuaInterpreter:Interpreter(String, LuaTable)
PixelCrushers.DialogueSystem.Lua:RunRaw(String, Boolean, Boolean)
PixelCrushers.DialogueSystem.Lua:IsTrue(String, Boolean, Boolean)
Sunshine.Metric.CheckResult:SetTargetModifiers(List`1)
CheckNodeUtil:GetCheck(DialogueEntry, CheckType, String)
WhiteCheckNode:CheckSuccess(DialogueEntry)
SunshineResponseButton:RegisterClick()
UnityEngine.DisplaysUpdatedDelegate:Invoke()
UnityEngine.Events.InvokableCall:Invoke(Object[])
UnityEngine.Events.UnityEvent:Invoke()
UnityEngine.UI.Button:OnSubmit(BaseEventData)
NavigationManager:HandleNavigationInput()

Expensive FindSpecifier invocation for object: CloakJumpMarker in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandTravelTo:Start()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FF0000>Validate Movement failed, movement target is null!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
FortressOccident.MouseOverHighlight:InteractFirstActive(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Secretary-int took 117.1875 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.581s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
Sunshine.GameController:TryMoveToTarget()
CharacterAnalogueControl:FixedUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Expensive FindSpecifier invocation for object: file_cabinet in the scene: Secretary-int. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandSetTriggerAnimation:Start()

Expensive FindSpecifier invocation for object: file_cabinet in the scene: Secretary-int. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandSetTriggerAnimation:Start()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Scene Loading Scenes/Martinaise-ext took 589.8438 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
FortressOccident.SceneTransitionManager:Load(String, String, Boolean, Boolean, Boolean)
FortressOccident.ApplicationManager:ChangeArea(String, String, Boolean, Boolean, Boolean)
FortressOccident.<Activate>d__6:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

WARNING!  Shaders Prewarmed!
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
ShaderWarmupper:Warmup()
System.Action:Invoke()
Voidforge.PrioritizedActionList:Invoke()
FortressOccident.<LoadSceneCoR>d__36:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Shader warmup: 141 shaders 17864 combinations 0.094s
Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Orb Template.GetInteractionLocation(): NavMesh.SamplePosition didn't return a hit! Try increasing InteractionRadius value.
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
FortressOccident.GameEntity:GetInteractionLocation(Location)
Sunshine.MovementCommand:Process(Component, Sector)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>GameController.MoveToTarget: no valid path was found!</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
Sunshine.GameController:MoveToTarget(Object, MovementMode, Purpose, Boolean, Boolean)
FortressOccident.GameEntity:Interact(ClickEventData)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

<color=#FFEB04>SetDestination failed: Character [Kim Kitsuragi, position: (-39.1, 12.4, -123.3)] can not reach newPosition: (-41.0, 43.5, -80.1).</color>
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
FortressOccident.Character:SetDestination(Vector3, Nullable`1, MovementMode, Boolean)
FortressOccident.Party:SetDestination(MovementCommand, Int32)
FortressOccident.<ExecuteCommandWithDelay>d__39:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Expensive FindSpecifier invocation for object: harbor_lift_camera in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandFocusCamera:Start()

Expensive FindSpecifier invocation for object: light-bent-container_animation in the scene: Martinaise-ext. Please add SequencerUsedObject component to this object
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
PixelCrushers.DialogueSystem.SequencerTools:FindSpecifier(String, Boolean)
PixelCrushers.DialogueSystem.SequencerTools:GetSubject(String, Transform, Transform, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommand:GetSubject(Int32, Transform)
PixelCrushers.DialogueSystem.SequencerCommands.SequencerCommandPlayAnimation:Start()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

[PersistentDataManager.GetRawData] Memory stream took 8246 KB
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
PixelCrushers.DialogueSystem.PersistentDataManager:GetRawData(MemoryStream)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

[SunshinePersistentFileManager.GetZipBytes] Memory stream took 987 KB (CAPACITY: 4096 KB)
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:LogWarning(Object)
SunshinePersistenceFileManager:GetZipBytes(ZipFile, Byte[]&, Int32&)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

SaveCoR GCCollect took 386.7188 ms
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<SaveCoR>d__54:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Interacting via cache
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
CommonPadInteractable:Interact(Boolean)
InteractableSelectionManager:Interact(Boolean)
CharacterAnalogueControl:LateUpdate()

OpenGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<OpenGameSettingsCoR>d__20:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)
SaveFolderAccessor:TouchGameSettingsWrites(Int32)
SettingsPersister:Save(Boolean, Int32)
Sunshine.ConversationLogger:SaveLastConversationTitle()
Sunshine.ConversationLogger:StopWorldOnConversationStart()
Sunshine.ConversationLogger:OnConversationStart(Transform)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform, Int32)
PixelCrushers.DialogueSystem.DialogueSystemController:StartConversation(String, Transform, Transform)
FortressOccident.BasicEntity:SendActivationEvent(Boolean)
FortressOccident.GameEntity:set_IsActive(Boolean)
Sunshine.GameController:OnCharacterHasArrived(Character, Boolean)
System.Action`2:Invoke(T1, T2)
FortressOccident.Character:set_movementStatus(MovementStatus)
FortressOccident.Character:LateUpdate()

CloseGameSettingsCoR:  True
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
<CloseGameSettingsCoR>d__21:MoveNext()
UnityEngine.SetupCoroutine:InvokeMoveNext(IEnumerator, IntPtr)

Detached native device with handle 22:
UnityEngine.Logger:Log(LogType, Object)
UnityEngine.Debug:Log(Object)
System.Action`1:Invoke(T)
InControl.Logger:LogInfo(String)
InControl.NativeInputDeviceManager:Update(UInt64, Single)
InControl.InputManager:UpdateInternal()

